<?xml version="1.0"?>

<project name="Dst3_1_WebApp" default="dist" basedir=".">
    
    <property environment="env"/>
    <property name="glassfish.home" value="${env.GLASSFISH_HOME}"/>
    <property name="domain.dir" value="${glassfish.home}/domains/domain1"/>
    <property name="admin.cli.jar" value="${glassfish.home}/modules/admin-cli.jar"/>
        
    <property name="setup.dir" value="setup"/>
    <property name="lib.dir" value="../lib" />
    <property name="dist.dir" value="dist" />
    <property name="datasourceFile.name" value="dst-ds.xml"/>
    <property name="warFile.name" value="dst3"/>
    
    <property name="web.dir" value="web" />
    <property name="web.src.dir" value="${web.dir}/src" />
    <property name="web.view.dir" value="${web.dir}/view" />
    <property name="web.config.dir" value="${web.dir}/config" />
    <property name="web.build.dir" value="${web.dir}/build" />
    
    <property name="javac.debug" value="true" />
    <property name="javac.deprecation" value="true" />

    <path id="web.build.classpath">
        <fileset dir="${glassfish.home}/lib">
            <include name="javaee.jar"/>
        </fileset>
    </path>
    
    <target name="check">
        <fail unless="env.GLASSFISH_HOME">
            #### You must install GlassFish V3 and set the GLASSFISH_HOME variable
        </fail>
    </target>

    <target name="setup" depends="check">
        <copy file="${lib.dir}/mysql-connector-java-5.1.11-bin.jar" todir="${domain.dir}/lib/ext"/>
	   <java jar="${admin.cli.jar}" fork="true" spawn="false">
	       <arg line="add-resources ${setup.dir}/${datasourceFile.name}"/>
        </java>
    </target>
    
    <target name="compile">
        <mkdir dir="${web.build.dir}/WEB-INF/classes" />
        <javac classpathref="web.build.classpath"
               srcdir="${web.src.dir}"
               destdir="${web.build.dir}/WEB-INF/classes" 
               debug="${javac.debug}" 
               deprecation="${javac.deprecation}" />
    </target>
    
    <target name="dist" depends="compile">
        <mkdir dir="${dist.dir}" />
        <copy todir="${web.build.dir}">
            <fileset dir="${web.view.dir}" />
            <fileset dir="${web.config.dir}" includes="WEB-INF/**" />
        </copy>
	   <copy todir="${web.build.dir}/WEB-INF/classes">
            <fileset dir="${web.config.dir}" includes="*.properties"/>
		 <fileset dir="${web.src.dir}" includes="*.properties"/>
		 <fileset dir="${web.src.dir}" includes="META-INF/**" />
        </copy>
        <jar jarfile="${dist.dir}/${warFile.name}.war" basedir="${web.build.dir}"/>
    </target>
    
    <target name="deploy" depends="dist">
        <java jar="${admin.cli.jar}" fork="true" spawn="false">
		  <arg line="deploy ${dist.dir}/${warFile.name}.war"/>
    	   </java>
    </target>
    
    <target name="undeploy" depends="check">
        <java jar="${admin.cli.jar}" fork="true" spawn="false">
		  <arg line="undeploy ${warFile.name}"/>
    	   </java>
    </target>
    
    <target name="redeploy" depends="undeploy,deploy"/>
    
    <target name="clean">
        <delete dir="${dist.dir}"/>
        <delete dir="${web.build.dir}"/>
 	   <java jar="${admin.cli.jar}" fork="true" spawn="false">
            <arg line="delete-jdbc-connection-pool --cascade=true dst_pool"/>
	   </java>
    </target>
    
</project>
